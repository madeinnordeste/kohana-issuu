<?php defined('SYSPATH') or die('No direct access allowed.');
/**
 * Issuu.com API interface.
 * Utils functions
 * 
 * @author Luiz Alberto (http://beto.euqueroserummacaco.com)
 * @version 0.1
 * @see http://issuu.com/services/api/
 */
class Issuu_Utils { 
	
	/**
	* Order params 
	*/
	public static function order_params($params){		
		ksort($params);    		
		return $params;
	}
	
	/**
	* Transform params in string
	*/
	public static function string_params($params, $is_url=FALSE){
				
		if($is_url){
			$signal = '=';
			$concat = '&';
		}else{
			$signal = '';
			$concat = '';
		}
		
		$params_string = '';
		
		foreach($params as $k => $v){
			$params_string.= $concat;
			$params_string.= $k;
			$params_string.= $signal;
			$params_string.= $v;
		}
		
		if($is_url){
			$params_string =  substr($params_string, 1);
		}
		
		return trim($params_string);
		
	}
	
	/**
	* Make method signature
	*/
	public static function make_signature($params){
		
		if(gettype($params) == 'array'){
			$params = Issuu_Utils::order_params($params);
			$params = Issuu_Utils::string_params($params);
		}
		
		$params = Kohana::config('issuu.api_secret').$params;
		//echo '<h1>'.$params.'</h1>'	;
		//echo '<h1>'.md5($params).'</h1>'	;
		return md5($params);
	}
	
	/**
	* Make endpoint for method
	*/
	public static function make_endpoint($params){
		
		$exceptions = array('issuu.document.upload' => 'http://upload.issuu.com/1_0');
		
		if(array_key_exists($params['action'], $exceptions)){
			
			$endpoint = $exceptions[$params['action']];
			
		}else{
			
			$endpoint = Kohana::config('issuu.api_url');

			$endpoint.='?'.Issuu_Utils::string_params($params, TRUE);
			
		}
				
		return $endpoint;
	}
	

	
	

	/**
	* Make request
	*/
	public static function make_request($params){
		
		$params['apiKey'] = Kohana::config('issuu.api_key');
				
		$data['signature'] = Issuu_Utils::make_signature($params);
		
		$params['signature'] = $data['signature'];
						
		$data['url'] = Issuu_Utils::make_endpoint($params);
				
		return $data;
		
	}
	
	
	/**
	* Get action URL
	*/
	public static function get_action_URL($params){
		
		$request = Issuu_Utils::make_request($params);
		return $request['url'];
		
	}
	
	
	
	/**
	* Return string for error code
	*/
	public static function error_code($code){
		
		$id = (int)$code;
		$e = array(100 => 'Maximum number of conversion attempts reached',
					200 => 'Input document is malformed',
					201 => 'Input document contains an invalid number of pages',
					202 => 'Input document is encrypted',
					204 => 'Input document is too complex',
					205 => 'General conversion error',
					207 => 'Download of file failed',
					209 => 'Download of file failed, file is too large',
					210 => 'Unrecognized file format',
					211 => 'File format not supported. Must be one of the following types: 
							.pdf, 
							.ppt, 
							.doc, 
							.odt, 
							.wpd, 
							.sxw, 
							.rtf, 
							.odp, 
							.sxi', 
					212 => 'Download of file failed, not found', 
					999 => 'Unknown error');
					
		return $e($id);

	}
	
	
	/**
	* Return string for warning code
	*/
	public static function warning_code($code){
		
		$id = (int)$code;
		$e = array(100 => 'PDF version not officially supported, finished document may differ from the original',
					300 => 'One or more pages containing complex vector graphics have been replaced by bitmaps. 
					The info field will contain a comma-separated list of the first 10 pages affected',
					302 => 'One or more pages containing unsupported PDF features were detected. 
					The info field will contain a comma-separated list of the first 10 pages affected',
					304 => 'PDF referenced an external font which has not been included',
					305 => 'Metadata like title and description has been autogenerated');
		
		return $e($id);			
				
	}
	
	
}
